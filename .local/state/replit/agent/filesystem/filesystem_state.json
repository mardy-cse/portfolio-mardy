{"file_contents":{"replit.md":{"content":"# John Liton Mardy Portfolio Website\n\n## Overview\n\nThis is a fully optimized, responsive portfolio website for John Liton Mardy, a professional Flutter developer from Bangladesh. Built with HTML, CSS, and JavaScript, the website showcases his expertise in cross-platform mobile application development. The site features comprehensive SEO optimization, responsive design across all devices, and real project portfolio including EBS, iCommune, and Namjari applications published on Google Play Store.\n\n## User Preferences\n\n- Preferred communication style: Simple, everyday language (Bengali/English)\n- Mobile-first responsive design approach\n- Professional portfolio with real projects (no mock/placeholder data)\n- SEO optimization for search ranking\n\n## Recent Changes\n\n**September 12, 2025**: Complete SEO optimization and mobile layout improvements\n- **SEO Optimization**: Comprehensive meta tags, Open Graph, Twitter Cards, JSON-LD structured data\n- **Search Engine Targeting**: Optimized for \"John Liton Mardy\" and \"Flutter developer\" searches\n- **Mobile Hero Layout**: Fixed image positioning (Title → Image → Content structure)\n- **Profile Image Size**: Increased from 200px to 280px (desktop), 120px to 180px (mobile)  \n- **Skills Section**: Fixed text overlap issues on mobile with proper flexbox layout\n- **Contact Form**: Left-aligned labels with centered submit button for better UX\n- **Sitemap & Robots.txt**: Added for better search engine crawling\n- **Real Project Integration**: EBS, iCommune, Namjari apps with authentic descriptions and Play Store links\n\n**Previous Updates**: \n- Created comprehensive portfolio with Hero, About, Skills, Projects, and Contact sections\n- Implemented fully responsive design with mobile/tablet/desktop breakpoints\n- Replaced generic icons with custom technology logos (Flutter, Dart, Firebase, MySQL, Postman)\n- Added interactive hover effects and smooth animations\n- Set up HTTP server workflow on port 5000\n\n## System Architecture\n\n### Frontend Architecture\n- **Static Site Structure**: Pure HTML/CSS/JavaScript implementation without frameworks\n- **Single Page Application**: All content sections (home, about, skills, projects, contact) are contained within a single HTML file\n- **Component-based Styling**: CSS organized around reusable components (navbar, hero, sections)\n- **Mobile-First Design**: Responsive layout with mobile navigation toggle functionality\n- **SEO-Optimized Structure**: Semantic HTML5, structured data (JSON-LD), and comprehensive meta tags\n- **Real Content Integration**: Authentic project portfolio with Google Play Store links\n\n### Design Patterns\n- **Progressive Enhancement**: Core functionality works without JavaScript, enhanced with interactive features\n- **Semantic HTML Structure**: Proper use of HTML5 semantic elements for accessibility and SEO\n- **CSS Custom Properties**: Modern CSS features for maintainable styling\n- **Event-Driven JavaScript**: DOM manipulation through event listeners for user interactions\n- **Mobile-Responsive Layouts**: Flexible CSS Grid/Flexbox with breakpoint-specific ordering\n- **SEO-First Content**: Optimized content structure for search engine ranking\n\n### Navigation System\n- **Fixed Navigation Bar**: Sticky header with backdrop blur effects\n- **Smooth Scrolling**: JavaScript-powered smooth transitions between sections\n- **Active Link Highlighting**: Dynamic navigation state based on scroll position\n- **Mobile Hamburger Menu**: Collapsible navigation for mobile devices\n\n### Styling Architecture\n- **Google Fonts Integration**: Poppins font family for typography\n- **Material Icons**: Google Material Design icons for UI elements\n- **CSS Grid/Flexbox**: Modern layout techniques for responsive design\n- **CSS Transitions**: Smooth animations and hover effects\n\n## SEO Optimization\n\n### Meta Tags & Social Media\n- **Title Tag**: \"John Liton Mardy - Flutter Developer | Portfolio\" (optimized for name + profession searches)\n- **Meta Description**: 150-character description targeting key search terms\n- **Keywords**: \"John Liton Mardy, Flutter Developer, Mobile App Developer, Bangladesh Developer\"\n- **Open Graph**: Facebook/LinkedIn sharing optimization with profile image\n- **Twitter Cards**: Professional summary cards for social media sharing\n- **Canonical URL**: Prevents duplicate content issues\n\n### Structured Data (JSON-LD Schema)\n- **Person Schema**: Complete professional profile with contact details, skills, location\n- **Website Schema**: Site information with search functionality\n- **SoftwareApplication Schema**: Individual schemas for EBS, iCommune, and Namjari apps\n- **Local Business Elements**: Bangladesh location targeting for regional searches\n\n### Technical SEO\n- **Sitemap.xml**: Complete site structure for search engine crawling\n- **Robots.txt**: Proper crawler instructions and sitemap reference\n- **Image Alt Tags**: Descriptive alt text for all images including project logos\n- **Semantic HTML**: H1-H6 hierarchy optimized for search ranking\n- **Mobile-First Indexing**: Responsive design prioritizing mobile experience\n\n## External Dependencies\n\n### Fonts and Icons\n- **Google Fonts**: Poppins font family (weights: 300, 400, 500, 600, 700)\n- **Google Material Icons**: Icon library for UI elements\n- **Font Awesome**: Additional icon support\n\n### Browser APIs\n- **Intersection Observer**: For scroll-based navigation highlighting\n- **Smooth Scroll API**: Native browser smooth scrolling functionality\n- **CSS Backdrop Filter**: Modern browser blur effects for navigation\n\n### Development Tools\n- **No Build Process**: Direct file serving without compilation or bundling\n- **Static Asset Structure**: Organized file hierarchy (assets/css/, assets/js/, assets/images/)\n- **Custom Technology Logos**: Authentic Flutter, Dart, Firebase, MySQL, Postman logos","size_bytes":5816},"server.js":{"content":"const express = require('express');\nconst path = require('path');\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Trust proxy for rate limiting in production\napp.set('trust proxy', 1);\n\n// Middleware\napp.use(express.json());\n// Serve static assets from assets directory only\napp.use('/assets', express.static('assets'));\n\n// Email sending function using Replit Mail API\nasync function sendEmail(message) {\n    const authToken = process.env.REPL_IDENTITY\n        ? \"repl \" + process.env.REPL_IDENTITY\n        : process.env.WEB_REPL_RENEWAL\n        ? \"depl \" + process.env.WEB_REPL_RENEWAL\n        : null;\n\n    if (!authToken) {\n        throw new Error(\"No authentication token found\");\n    }\n\n    const response = await fetch(\n        \"https://connectors.replit.com/api/v2/mailer/send\",\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X_REPLIT_TOKEN\": authToken,\n            },\n            body: JSON.stringify(message),\n        }\n    );\n\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to send email\");\n    }\n\n    return await response.json();\n}\n\n// Simple rate limiting\nconst rateLimit = new Map();\n\n// API endpoint for sending contact form emails\napp.post('/api/send-email', async (req, res) => {\n    try {\n        const { name, email, subject, message, honeypot } = req.body;\n        \n        // Honeypot check (basic spam protection)\n        if (honeypot) {\n            return res.status(400).json({ success: false, error: 'Invalid submission' });\n        }\n        \n        // Basic validation\n        if (!name || !email || !subject || !message) {\n            return res.status(400).json({ success: false, error: 'All fields are required' });\n        }\n        \n        if (name.length > 100 || email.length > 254 || subject.length > 200 || message.length > 2000) {\n            return res.status(400).json({ success: false, error: 'Field too long' });\n        }\n        \n        // Basic rate limiting (per IP)\n        const clientIP = req.ip || req.connection.remoteAddress;\n        const now = Date.now();\n        const lastRequest = rateLimit.get(clientIP);\n        \n        if (lastRequest && now - lastRequest < 60000) { // 1 minute cooldown\n            return res.status(429).json({ success: false, error: 'Please wait before sending another message' });\n        }\n        \n        rateLimit.set(clientIP, now);\n        \n        // Fixed recipient - your email address\n        const CONTACT_EMAIL = 'mardy.cse@gmail.com';\n        \n        const result = await sendEmail({\n            to: CONTACT_EMAIL,\n            subject: `Portfolio Contact: ${subject}`,\n            text: `Name: ${name}\\nEmail: ${email}\\n\\nMessage:\\n${message}`,\n            html: `\n                <h3>New Contact Form Submission</h3>\n                <p><strong>Name:</strong> ${name}</p>\n                <p><strong>Email:</strong> ${email}</p>\n                <p><strong>Subject:</strong> ${subject}</p>\n                <p><strong>Message:</strong></p>\n                <p>${message.replace(/\\n/g, '<br>')}</p>\n            `\n        });\n        \n        console.log('Email sent successfully:', result);\n        res.json({ success: true });\n    } catch (error) {\n        console.error('Error sending email:', error);\n        res.status(500).json({ success: false, error: 'Failed to send message' });\n    }\n});\n\n// Serve the main page\napp.get('/', (req, res) => {\n    res.sendFile(path.join(__dirname, 'index.html'));\n});\n\n// Cache control headers to prevent caching issues\napp.use((req, res, next) => {\n    res.header('Cache-Control', 'no-cache, no-store, must-revalidate');\n    res.header('Pragma', 'no-cache');\n    res.header('Expires', '0');\n    next();\n});\n\napp.listen(PORT, '0.0.0.0', () => {\n    console.log(`Portfolio server running on http://0.0.0.0:${PORT}`);\n});","size_bytes":3924},"assets/css/style.css":{"content":"/* CSS Custom Properties for Theme */\n:root {\n    /* Light theme colors */\n    --bg-primary: #ffffff;\n    --bg-secondary: #f8f9fa;\n    --bg-hero: linear-gradient(135deg, #f5f5f5 0%, #e3f2fd 100%);\n    --bg-contact: #263238;\n    --text-primary: #212121;\n    --text-secondary: #424242;\n    --text-muted: #616161;\n    --text-light: rgba(255, 255, 255, 0.7);\n    --nav-bg: rgba(255, 255, 255, 0.95);\n    --card-bg: #ffffff;\n    --card-shadow: rgba(0, 0, 0, 0.05);\n    --border-color: rgba(0, 0, 0, 0.1);\n    --accent-color: #2196F3;\n}\n\n/* Dark theme colors */\n[data-theme=\"dark\"] {\n    --bg-primary: #121212;\n    --bg-secondary: #1e1e1e;\n    --bg-hero: linear-gradient(135deg, #1a1a1a 0%, #2c2c2c 100%);\n    --bg-contact: #0f0f0f;\n    --text-primary: #ffffff;\n    --text-secondary: #e0e0e0;\n    --text-muted: #b0b0b0;\n    --text-light: rgba(255, 255, 255, 0.7);\n    --nav-bg: rgba(18, 18, 18, 0.95);\n    --card-bg: #1e1e1e;\n    --card-shadow: rgba(0, 0, 0, 0.3);\n    --border-color: rgba(255, 255, 255, 0.1);\n    --accent-color: #2196F3;\n}\n\n/* Reset and Base Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    scroll-behavior: smooth;\n}\n\nbody {\n    font-family: 'Poppins', sans-serif;\n    line-height: 1.6;\n    color: var(--text-secondary);\n    background-color: var(--bg-primary);\n    overflow-x: hidden;\n    transition: background-color 0.3s ease, color 0.3s ease;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 20px;\n}\n\n/* Navigation */\n.navbar {\n    position: fixed;\n    top: 0;\n    width: 100%;\n    background: var(--nav-bg);\n    backdrop-filter: blur(10px);\n    z-index: 1000;\n    box-shadow: 0 2px 10px var(--card-shadow);\n    transition: all 0.3s ease;\n}\n\n.nav-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 70px;\n}\n\n.nav-logo {\n    font-size: 24px;\n    font-weight: 600;\n    color: #2196F3;\n}\n\n.nav-menu {\n    display: flex;\n    list-style: none;\n    gap: 30px;\n}\n\n.nav-link {\n    text-decoration: none;\n    color: var(--text-secondary);\n    font-weight: 500;\n    transition: color 0.3s ease;\n    position: relative;\n}\n\n.nav-link:hover {\n    color: var(--accent-color);\n}\n\n.nav-link::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 0;\n    width: 0;\n    height: 2px;\n    background: var(--accent-color);\n    transition: width 0.3s ease;\n}\n\n.nav-link:hover::after {\n    width: 100%;\n}\n\n.nav-toggle {\n    display: none;\n    flex-direction: column;\n    cursor: pointer;\n}\n\n.nav-actions {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n}\n\n.theme-toggle {\n    background: none;\n    border: 1px solid var(--border-color);\n    border-radius: 8px;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    color: var(--text-secondary);\n}\n\n.theme-toggle:hover {\n    background: var(--accent-color);\n    color: white;\n    border-color: var(--accent-color);\n}\n\n.theme-toggle .material-icons {\n    font-size: 20px;\n}\n\n.bar {\n    width: 25px;\n    height: 3px;\n    background: var(--text-secondary);\n    margin: 3px 0;\n    transition: 0.3s;\n}\n\n/* Hero Section */\n.hero {\n    min-height: 100vh;\n    background: var(--bg-hero);\n    display: flex;\n    align-items: center;\n    padding-top: 70px;\n    transition: background 0.3s ease;\n}\n\n.hero-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 20px;\n}\n\n.hero-content {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    grid-template-areas: \n        \"main-title image\"\n        \"text image\";\n    gap: 60px;\n    align-items: center;\n}\n\n.hero-main-title {\n    grid-area: main-title;\n}\n\n.hero-text {\n    grid-area: text;\n}\n\n.hero-image {\n    grid-area: image;\n}\n\n.hero-title {\n    font-size: 48px;\n    font-weight: bold;\n    color: var(--text-primary);\n    margin-bottom: 8px;\n}\n\n.hero-subtitle {\n    font-size: 24px;\n    font-weight: 500;\n    color: var(--accent-color);\n    margin-bottom: 16px;\n}\n\n.hero-description {\n    font-size: 16px;\n    line-height: 1.6;\n    color: var(--text-muted);\n    margin-bottom: 32px;\n}\n\n.hero-buttons {\n    display: flex;\n    gap: 16px;\n}\n\n.btn {\n    padding: 16px 32px;\n    border-radius: 8px;\n    text-decoration: none;\n    font-weight: 600;\n    font-family: 'Poppins', sans-serif;\n    transition: all 0.3s ease;\n    display: inline-block;\n}\n\n.btn-primary {\n    background: var(--accent-color);\n    color: white;\n    border: 2px solid var(--accent-color);\n}\n\n.btn-primary:hover {\n    background: #1976D2;\n    border-color: #1976D2;\n    transform: translateY(-2px);\n}\n\n.btn-secondary {\n    background: transparent;\n    color: var(--accent-color);\n    border: 2px solid var(--accent-color);\n}\n\n.btn-secondary:hover {\n    background: var(--accent-color);\n    color: white;\n    transform: translateY(-2px);\n}\n\n.profile-image {\n    width: 280px;\n    height: 280px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n    box-shadow: 0 10px 30px rgba(33, 150, 243, 0.3);\n    overflow: hidden;\n    border: 4px solid var(--accent-color);\n}\n\n.profile-image .material-icons {\n    font-size: 120px;\n    color: white;\n}\n\n.profile-img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n}\n\n/* Section Styles */\n.section-header {\n    text-align: center;\n    margin-bottom: 60px;\n    position: relative;\n    z-index: 10;\n}\n\n.section-title {\n    font-size: 36px;\n    font-weight: bold;\n    color: var(--text-primary);\n    margin-bottom: 8px;\n    position: relative;\n    z-index: 10;\n}\n\n.section-line {\n    width: 60px;\n    height: 4px;\n    background: var(--accent-color);\n    margin: 0 auto;\n    border-radius: 2px;\n    position: relative;\n    z-index: 10;\n}\n\n/* About Section */\n.about {\n    padding: 80px 0;\n    background: var(--bg-primary);\n    transition: background 0.3s ease;\n    position: relative;\n    z-index: 1;\n}\n\n.about-content {\n    max-width: 800px;\n    margin: 0 auto;\n    text-align: center;\n    position: relative;\n    z-index: 2;\n}\n\n.about-text {\n    font-size: 18px;\n    line-height: 1.7;\n    color: var(--text-secondary);\n    margin-bottom: 24px;\n    text-align: justify;\n}\n\n/* Education Section */\n.education {\n    padding: 80px 0;\n    background: var(--bg-secondary);\n    transition: background 0.3s ease;\n}\n\n.education-content {\n    max-width: 900px;\n    margin: 0 auto;\n}\n\n.education-item {\n    background: var(--card-bg);\n    padding: 30px;\n    border-radius: 12px;\n    margin-bottom: 24px;\n    box-shadow: 0 4px 20px var(--card-shadow);\n    transition: transform 0.3s ease, background 0.3s ease;\n    border-left: 4px solid var(--accent-color);\n}\n\n.education-item:hover {\n    transform: translateY(-2px);\n}\n\n.education-degree {\n    font-size: 22px;\n    font-weight: 600;\n    color: var(--text-primary);\n    margin-bottom: 8px;\n}\n\n.education-details {\n    font-size: 16px;\n    color: var(--accent-color);\n    font-weight: 500;\n    margin-bottom: 16px;\n}\n\n.education-highlights {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.education-highlights li {\n    font-size: 16px;\n    color: var(--text-secondary);\n    line-height: 1.6;\n    margin-bottom: 12px;\n    padding-left: 20px;\n    position: relative;\n}\n\n.education-highlights li:before {\n    content: '•';\n    color: var(--accent-color);\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n}\n\n/* Skills Section */\n.skills {\n    padding: 80px 0;\n    background: var(--bg-primary);\n    transition: background 0.3s ease;\n}\n\n.skills-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 30px;\n    max-width: 1000px;\n    margin: 0 auto;\n}\n\n.skill-card {\n    background: var(--card-bg);\n    padding: 40px 24px;\n    border-radius: 12px;\n    text-align: center;\n    box-shadow: 0 4px 20px var(--card-shadow);\n    transition: transform 0.3s ease, background 0.3s ease;\n}\n\n.skill-card:hover {\n    transform: translateY(-5px);\n}\n\n.skill-icon {\n    width: 80px;\n    height: 80px;\n    border-radius: 16px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto 16px;\n}\n\n.skill-icon.flutter {\n    background: rgba(2, 86, 155, 0.1);\n    color: #02569B;\n}\n\n.skill-icon.dart {\n    background: rgba(1, 117, 194, 0.1);\n    color: #0175C2;\n}\n\n.skill-icon.firebase {\n    background: rgba(255, 202, 40, 0.1);\n    color: #FFCA28;\n}\n\n.skill-icon.mysql {\n    background: rgba(0, 117, 143, 0.1);\n    color: #00758F;\n}\n\n.skill-icon.postman {\n    background: rgba(255, 111, 15, 0.1);\n    color: #FF6F0F;\n}\n\n.skill-icon .material-icons {\n    font-size: 40px;\n}\n\n.skill-logo {\n    width: 50px;\n    height: 50px;\n    object-fit: contain;\n}\n\n.skill-title {\n    font-size: 20px;\n    font-weight: 600;\n    color: var(--text-primary);\n    margin-bottom: 8px;\n}\n\n.skill-description {\n    font-size: 14px;\n    color: var(--text-muted);\n}\n\n/* Experience Section */\n.experience {\n    padding: 80px 0;\n    background: var(--bg-secondary);\n    transition: background 0.3s ease;\n}\n\n.experience-content {\n    max-width: 900px;\n    margin: 0 auto;\n}\n\n.experience-item {\n    background: var(--card-bg);\n    padding: 30px;\n    border-radius: 12px;\n    margin-bottom: 24px;\n    box-shadow: 0 4px 20px var(--card-shadow);\n    transition: transform 0.3s ease, background 0.3s ease;\n    border-left: 4px solid var(--accent-color);\n}\n\n.experience-item:hover {\n    transform: translateY(-2px);\n}\n\n.experience-title {\n    font-size: 22px;\n    font-weight: 600;\n    color: var(--text-primary);\n    margin-bottom: 8px;\n}\n\n.experience-company {\n    font-size: 16px;\n    color: var(--accent-color);\n    font-weight: 500;\n    margin-bottom: 16px;\n}\n\n.experience-highlights {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.experience-highlights li {\n    font-size: 16px;\n    color: var(--text-secondary);\n    line-height: 1.6;\n    margin-bottom: 12px;\n    padding-left: 20px;\n    position: relative;\n}\n\n.experience-highlights li:before {\n    content: '•';\n    color: var(--accent-color);\n    font-weight: bold;\n    position: absolute;\n    left: 0;\n}\n\n/* Projects Section */\n.projects {\n    padding: 80px 0;\n    background: var(--bg-primary);\n    transition: background 0.3s ease;\n}\n\n.projects-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    gap: 30px;\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n.project-card-link {\n    text-decoration: none;\n    color: inherit;\n    display: block;\n}\n\n.project-card {\n    background: var(--card-bg);\n    border-radius: 12px;\n    overflow: hidden;\n    box-shadow: 0 4px 20px var(--card-shadow);\n    border: 1px solid transparent;\n    transition: all 0.3s ease;\n    cursor: pointer;\n}\n\n.project-card-link:hover .project-card {\n    transform: translateY(-2px) scale(1.05);\n    box-shadow: 0 8px 30px var(--card-shadow);\n    border: 1px solid var(--accent-color);\n}\n\n\n.project-image {\n    height: 120px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 12px 12px 0 0;\n    transition: transform 0.3s ease;\n}\n\n.project-image.ebs {\n    background: rgba(63, 81, 181, 0.1);\n    color: #3F51B5;\n}\n\n.project-image.icommune {\n    background: rgba(244, 67, 54, 0.1);\n    color: #F44336;\n}\n\n.project-image.namjari {\n    background: rgba(76, 175, 80, 0.1);\n    color: #4CAF50;\n}\n\n.project-image .material-icons {\n    font-size: 48px;\n}\n\n.project-logo {\n    width: 80px;\n    height: 80px;\n    object-fit: contain;\n    border-radius: 8px;\n}\n\n.project-content {\n    padding: 20px;\n    transition: background 0.3s ease;\n}\n\n.project-title {\n    font-size: 18px;\n    font-weight: 600;\n    color: var(--text-primary);\n    margin-bottom: 8px;\n}\n\n.project-description {\n    font-size: 14px;\n    color: var(--text-muted);\n    line-height: 1.5;\n    margin-bottom: 16px;\n}\n\n.project-technologies {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    margin-bottom: 16px;\n}\n\n.tech-tag {\n    padding: 4px 8px;\n    background: rgba(33, 150, 243, 0.1);\n    color: var(--accent-color);\n    border-radius: 12px;\n    font-size: 12px;\n    font-weight: 500;\n}\n\n.project-links {\n    display: flex;\n    gap: 12px;\n}\n\n.project-link {\n    flex: 1;\n    padding: 8px 16px;\n    border-radius: 6px;\n    text-decoration: none;\n    font-size: 14px;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 4px;\n    transition: all 0.3s ease;\n}\n\n.project-link.github {\n    border: 1px solid var(--accent-color);\n    color: var(--accent-color);\n    background: var(--card-bg);\n}\n\n.project-link.github:hover {\n    background: var(--accent-color);\n    color: white;\n}\n\n.project-link.playstore {\n    background: #4CAF50;\n    color: white;\n    border: 1px solid #4CAF50;\n}\n\n.project-link.playstore:hover {\n    background: #388E3C;\n    border-color: #388E3C;\n}\n\n.project-link .material-icons {\n    font-size: 16px;\n}\n\n/* Contact Section */\n.contact {\n    padding: 80px 0;\n    background: var(--bg-contact);\n    color: white;\n    transition: background 0.3s ease;\n}\n\n.contact .section-title {\n    color: white;\n}\n\n.contact-content {\n    max-width: 1200px;\n    margin: 0 auto;\n    text-align: center;\n}\n\n.contact-description {\n    font-size: 18px;\n    line-height: 1.6;\n    color: rgba(255, 255, 255, 0.7);\n    margin-bottom: 50px;\n}\n\n.contact-layout {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 60px;\n    align-items: stretch;\n    text-align: left;\n    margin-bottom: 60px;\n}\n\n.contact-info-section {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n.contact-form-section {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n.contact-info {\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    height: 100%;\n    justify-content: flex-start;\n}\n\n.contact-item {\n    display: flex;\n    align-items: center;\n    padding: 24px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 12px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    transition: all 0.3s ease;\n    flex: 1;\n    min-height: 80px;\n}\n\n.contact-item:hover {\n    background: rgba(255, 255, 255, 0.08);\n    border-color: var(--accent-color);\n    transform: translateY(-2px);\n}\n\n.contact-icon {\n    width: 50px;\n    height: 50px;\n    background: rgba(33, 150, 243, 0.2);\n    border-radius: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 16px;\n}\n\n.contact-icon .material-icons {\n    color: var(--accent-color);\n    font-size: 24px;\n}\n\n.contact-details h4 {\n    font-size: 14px;\n    color: rgba(255, 255, 255, 0.6);\n    margin-bottom: 4px;\n}\n\n.contact-details a {\n    color: white;\n    text-decoration: none;\n    font-weight: 500;\n}\n\n.contact-details p {\n    color: white;\n    font-weight: 500;\n}\n\n.social-links {\n    display: flex;\n    justify-content: center;\n    gap: 20px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n}\n\n.social-link {\n    width: 60px;\n    height: 60px;\n    border-radius: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    transition: all 0.3s ease;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.social-link.github {\n    background: rgba(51, 51, 51, 0.1);\n    color: #333333;\n}\n\n.social-link.linkedin {\n    background: rgba(0, 119, 181, 0.1);\n    color: #0077B5;\n}\n\n.social-link.whatsapp {\n    background: rgba(37, 211, 102, 0.1);\n    color: #25D366;\n}\n\n.social-link:hover {\n    transform: translateY(-2px);\n    border-color: currentColor;\n}\n\n.social-link .fab {\n    font-size: 24px;\n}\n\n/* Contact Form Styles */\n.contact-form {\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 16px;\n    padding: 32px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(10px);\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n.form-title {\n    font-size: 24px;\n    font-weight: 600;\n    color: white;\n    margin-bottom: 24px;\n    text-align: left;\n}\n\n.form-row {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 16px;\n    margin-bottom: 16px;\n}\n\n.form-group {\n    margin-bottom: 16px;\n}\n\n.form-group label {\n    display: block;\n    font-size: 14px;\n    font-weight: 500;\n    color: rgba(255, 255, 255, 0.8);\n    margin-bottom: 8px;\n    text-align: left;\n}\n\n.form-group input,\n.form-group textarea {\n    width: 100%;\n    padding: 12px 16px;\n    background: rgba(255, 255, 255, 0.08);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-radius: 8px;\n    color: white;\n    font-size: 14px;\n    transition: all 0.3s ease;\n    box-sizing: border-box;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--accent-color);\n    background: rgba(255, 255, 255, 0.12);\n    box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.1);\n}\n\n.form-group input::placeholder,\n.form-group textarea::placeholder {\n    color: rgba(255, 255, 255, 0.5);\n}\n\n.form-group textarea {\n    min-height: 120px;\n    resize: vertical;\n    font-family: inherit;\n}\n\n.submit-btn {\n    width: 100%;\n    padding: 16px;\n    font-size: 16px;\n    font-weight: 600;\n    margin: 0 auto;\n    display: block;\n    border-radius: 8px;\n    margin-top: 8px;\n    position: relative;\n    overflow: hidden;\n}\n\n.submit-btn:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n}\n\n.btn-loading {\n    display: none;\n}\n\n.form-message {\n    padding: 12px 16px;\n    border-radius: 8px;\n    margin-bottom: 16px;\n    font-size: 14px;\n    font-weight: 500;\n}\n\n.form-message.success {\n    background: rgba(76, 175, 80, 0.1);\n    border: 1px solid rgba(76, 175, 80, 0.3);\n    color: #4CAF50;\n}\n\n.form-message.error {\n    background: rgba(244, 67, 54, 0.1);\n    border: 1px solid rgba(244, 67, 54, 0.3);\n    color: #f44336;\n}\n\n.footer {\n    padding-top: 20px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    text-align: center;\n}\n\n.footer p {\n    font-size: 14px;\n    color: rgba(255, 255, 255, 0.6);\n}\n\n/* Responsive Design */\n\n/* Tablet Styles */\n@media (max-width: 1024px) and (min-width: 769px) {\n    .contact-layout {\n        gap: 40px;\n        margin-bottom: 50px;\n    }\n    \n    .contact-form {\n        padding: 28px;\n    }\n}\n\n/* Mobile Styles */\n@media (max-width: 768px) {\n    .nav-menu {\n        position: fixed;\n        left: -100%;\n        top: 70px;\n        flex-direction: column;\n        background-color: var(--card-bg);\n        width: 100%;\n        text-align: center;\n        transition: 0.3s;\n        box-shadow: 0 10px 27px var(--card-shadow);\n        padding: 20px 0;\n    }\n\n    .nav-menu.active {\n        left: 0;\n    }\n\n    .nav-menu li {\n        margin: 10px 0;\n    }\n\n    .nav-toggle {\n        display: flex;\n    }\n\n    .theme-toggle {\n        width: 35px;\n        height: 35px;\n    }\n\n    .theme-toggle .material-icons {\n        font-size: 18px;\n    }\n\n    .nav-toggle.active .bar:nth-child(2) {\n        opacity: 0;\n    }\n\n    .nav-toggle.active .bar:nth-child(1) {\n        transform: translateY(8px) rotate(45deg);\n    }\n\n    .nav-toggle.active .bar:nth-child(3) {\n        transform: translateY(-8px) rotate(-45deg);\n    }\n\n    .hero-content {\n        display: flex !important;\n        flex-direction: column !important;\n        text-align: center;\n        gap: 30px;\n        grid-template-areas: none !important;\n    }\n    \n    .hero-main-title {\n        order: 1 !important;\n    }\n    \n    .hero-image {\n        order: 2 !important;\n    }\n    \n    .hero-text {\n        order: 3 !important;\n    }\n\n    .hero-title {\n        font-size: 32px;\n    }\n\n    .hero-subtitle {\n        font-size: 18px;\n    }\n\n    .hero-description {\n        font-size: 14px;\n    }\n\n    .hero-buttons {\n        flex-direction: column;\n        align-items: center;\n        gap: 12px;\n    }\n\n    .btn {\n        width: 200px;\n        text-align: center;\n    }\n\n    .profile-image {\n        width: 180px;\n        height: 180px;\n    }\n\n    .profile-image .material-icons {\n        font-size: 72px;\n    }\n\n    .skills-grid {\n        grid-template-columns: 1fr;\n        gap: 25px;\n    }\n\n    .skill-card {\n        display: flex;\n        align-items: flex-start;\n        text-align: left;\n        padding: 24px;\n        min-height: 100px;\n    }\n\n    .skill-icon {\n        width: 60px;\n        height: 60px;\n        margin: 0 20px 0 0;\n        flex-shrink: 0;\n    }\n\n    .skill-icon .material-icons {\n        font-size: 30px;\n    }\n    \n    .skill-logo {\n        width: 40px;\n        height: 40px;\n    }\n    \n    .skill-content {\n        flex: 1;\n        padding-top: 8px;\n    }\n    \n    .skill-title {\n        font-size: 18px;\n        line-height: 1.3;\n        margin-bottom: 6px;\n    }\n    \n    .skill-description {\n        font-size: 13px;\n        line-height: 1.4;\n        color: var(--text-muted);\n    }\n\n    .projects-grid {\n        grid-template-columns: 1fr;\n        gap: 20px;\n    }\n\n    .contact-layout {\n        grid-template-columns: 1fr;\n        gap: 40px;\n        margin-bottom: 40px;\n    }\n\n    .contact-info-section,\n    .contact-form-section {\n        height: auto;\n    }\n\n    .contact-form {\n        height: auto;\n    }\n\n    .contact-item {\n        flex-direction: column;\n        text-align: center;\n    }\n    \n    .contact-form {\n        text-align: left;\n    }\n    \n    .contact-form .form-title {\n        text-align: center;\n        margin-bottom: 24px;\n    }\n\n    .contact-icon {\n        margin: 0 0 16px 0;\n    }\n\n    .social-links {\n        gap: 15px;\n    }\n\n    .social-link {\n        width: 50px;\n        height: 50px;\n    }\n\n    .section-title {\n        font-size: 28px;\n    }\n    \n    .form-row {\n        grid-template-columns: 1fr;\n        gap: 0;\n    }\n    \n    .contact-form {\n        padding: 24px;\n        height: auto;\n    }\n\n    .social-links {\n        margin-top: 30px;\n        gap: 15px;\n    }\n    \n    .form-title {\n        font-size: 20px;\n    }\n}\n\n@media (max-width: 480px) {\n    .container,\n    .hero-container,\n    .nav-container {\n        padding: 0 15px;\n    }\n\n    .hero-title {\n        font-size: 28px;\n    }\n\n    .projects-grid {\n        grid-template-columns: 1fr;\n    }\n\n    .project-links {\n        flex-direction: column;\n        gap: 8px;\n    }\n}\n\n/* Animations */\n@keyframes fadeInUp {\n    from {\n        opacity: 0;\n        transform: translateY(30px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.hero-text,\n.skill-card,\n.project-card {\n    animation: fadeInUp 0.6s ease-out;\n}\n\n/* Smooth scrolling offset for fixed navbar */\nhtml {\n    scroll-padding-top: 70px;\n}","size_bytes":22563},"assets/js/script.js":{"content":"// Theme Toggle Functionality\nconst themeToggle = document.getElementById('theme-toggle');\nconst themeIcon = themeToggle.querySelector('.material-icons');\n\n// Check for saved theme preference or default to 'dark'\nconst currentTheme = localStorage.getItem('theme') || 'dark';\ndocument.documentElement.setAttribute('data-theme', currentTheme);\n\n// Update theme toggle icon based on current theme\nfunction updateThemeIcon(theme) {\n    if (theme === 'dark') {\n        themeIcon.textContent = 'dark_mode';\n    } else {\n        themeIcon.textContent = 'light_mode';\n    }\n}\n\n// Initialize theme icon\nupdateThemeIcon(currentTheme);\n\n// Theme toggle event listener\nthemeToggle.addEventListener('click', () => {\n    const currentTheme = document.documentElement.getAttribute('data-theme');\n    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n    \n    document.documentElement.setAttribute('data-theme', newTheme);\n    localStorage.setItem('theme', newTheme);\n    updateThemeIcon(newTheme);\n    \n    // Update navbar background based on theme\n    updateNavbarTheme(newTheme);\n});\n\n// Update navbar background for theme\nfunction updateNavbarTheme(theme) {\n    const navbar = document.querySelector('.navbar');\n    if (theme === 'dark') {\n        if (window.scrollY > 50) {\n            navbar.style.background = 'rgba(18, 18, 18, 0.98)';\n        } else {\n            navbar.style.background = 'rgba(18, 18, 18, 0.95)';\n        }\n    } else {\n        if (window.scrollY > 50) {\n            navbar.style.background = 'rgba(255, 255, 255, 0.98)';\n        } else {\n            navbar.style.background = 'rgba(255, 255, 255, 0.95)';\n        }\n    }\n}\n\n// Mobile Navigation Toggle\nconst navToggle = document.querySelector('.nav-toggle');\nconst navMenu = document.querySelector('.nav-menu');\nconst navLinks = document.querySelectorAll('.nav-link');\n\nnavToggle.addEventListener('click', () => {\n    navMenu.classList.toggle('active');\n    navToggle.classList.toggle('active');\n});\n\n// Close mobile menu when clicking on a link and update logo\nnavLinks.forEach(link => {\n    link.addEventListener('click', () => {\n        navMenu.classList.remove('active');\n        navToggle.classList.remove('active');\n        \n        // Update logo based on clicked navigation link\n        const targetSection = link.getAttribute('href').substring(1); // Remove #\n        updateNavLogo(targetSection);\n    });\n});\n\n// Smooth scrolling for navigation links\nnavLinks.forEach(link => {\n    link.addEventListener('click', (e) => {\n        e.preventDefault();\n        const targetId = link.getAttribute('href');\n        const targetSection = document.querySelector(targetId);\n        \n        if (targetSection) {\n            const offsetTop = targetSection.offsetTop - 70; // Account for fixed navbar\n            window.scrollTo({\n                top: offsetTop,\n                behavior: 'smooth'\n            });\n        }\n    });\n});\n\n// Navigation logo update function\nfunction updateNavLogo(currentSection) {\n    const navLogo = document.querySelector('.nav-logo');\n    if (currentSection === 'home' || currentSection === '') {\n        navLogo.textContent = 'Portfolio';\n    } else {\n        navLogo.textContent = 'John Liton Mardy';\n    }\n}\n\n// Active navigation link highlighting\nwindow.addEventListener('scroll', () => {\n    let current = '';\n    const sections = document.querySelectorAll('section');\n    \n    sections.forEach(section => {\n        const sectionTop = section.offsetTop;\n        const sectionHeight = section.clientHeight;\n        if (scrollY >= (sectionTop - 200)) {\n            current = section.getAttribute('id');\n        }\n    });\n\n    navLinks.forEach(link => {\n        link.classList.remove('active');\n        if (link.getAttribute('href') === `#${current}`) {\n            link.classList.add('active');\n        }\n    });\n    \n    // Update navigation logo based on current section\n    updateNavLogo(current);\n});\n\n// Intersection Observer for animations\nconst observerOptions = {\n    threshold: 0.1,\n    rootMargin: '0px 0px -50px 0px'\n};\n\nconst observer = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            entry.target.style.opacity = '1';\n            entry.target.style.transform = 'translateY(0)';\n        }\n    });\n}, observerOptions);\n\n// Observe all skill cards and project cards for animations\ndocument.addEventListener('DOMContentLoaded', () => {\n    const animatedElements = document.querySelectorAll('.skill-card, .project-card, .about-text');\n    \n    animatedElements.forEach(el => {\n        el.style.opacity = '0';\n        el.style.transform = 'translateY(30px)';\n        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';\n        observer.observe(el);\n    });\n});\n\n// Add navbar background on scroll (theme-aware)\nwindow.addEventListener('scroll', () => {\n    const currentTheme = document.documentElement.getAttribute('data-theme');\n    updateNavbarTheme(currentTheme);\n});\n\n// External link handling\ndocument.querySelectorAll('a[target=\"_blank\"]').forEach(link => {\n    link.addEventListener('click', (e) => {\n        // Links will open in new tab as intended\n        console.log('Opening external link:', link.href);\n    });\n});\n\n// Contact form handling (if needed in future)\n// Message display function\nfunction showMessage(message, type) {\n    // Remove any existing messages\n    const existingMessage = document.querySelector('.form-message');\n    if (existingMessage) {\n        existingMessage.remove();\n    }\n    \n    // Create message element\n    const messageDiv = document.createElement('div');\n    messageDiv.className = `form-message ${type}`;\n    messageDiv.textContent = message;\n    \n    // Insert before the submit button\n    const submitBtn = document.querySelector('.submit-btn');\n    submitBtn.parentNode.insertBefore(messageDiv, submitBtn);\n    \n    // Auto-remove after 5 seconds\n    setTimeout(() => {\n        if (messageDiv.parentNode) {\n            messageDiv.remove();\n        }\n    }, 5000);\n}\n\n// Contact Form Submission - using Replit Mail integration\nconst contactForm = document.getElementById('contact-form');\nif (contactForm) {\n    contactForm.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        \n        const submitBtn = contactForm.querySelector('.submit-btn');\n        const btnText = submitBtn.querySelector('.btn-text');\n        const btnLoading = submitBtn.querySelector('.btn-loading');\n        \n        // Get form data\n        const formData = new FormData(contactForm);\n        const name = formData.get('name');\n        const email = formData.get('email');\n        const subject = formData.get('subject');\n        const message = formData.get('message');\n        \n        // Validate fields\n        if (!name || !email || !subject || !message) {\n            alert('Please fill in all fields.');\n            return;\n        }\n        \n        // Show loading state\n        submitBtn.disabled = true;\n        btnText.style.display = 'none';\n        btnLoading.style.display = 'inline';\n        \n        try {\n            // Send email using secure API endpoint\n            const response = await fetch('/api/send-email', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    name,\n                    email,\n                    subject,\n                    message,\n                    honeypot: '' // Anti-spam field\n                })\n            });\n            \n            const result = await response.json();\n            \n            if (response.ok && result.success) {\n                // Success\n                showMessage('Message sent successfully! I\\'ll get back to you soon.', 'success');\n                contactForm.reset();\n            } else {\n                throw new Error(result.error || 'Failed to send message');\n            }\n        } catch (error) {\n            console.error('Error sending message:', error);\n            showMessage(error.message || 'Sorry, there was an error sending your message. Please try again.', 'error');\n        } finally {\n            // Reset button state\n            submitBtn.disabled = false;\n            btnText.style.display = 'inline';\n            btnLoading.style.display = 'none';\n        }\n    });\n}\n\n// Typing animation for hero title (optional enhancement)\nfunction typeWriter(element, text, speed = 100) {\n    let i = 0;\n    element.innerHTML = '';\n    \n    function type() {\n        if (i < text.length) {\n            element.innerHTML += text.charAt(i);\n            i++;\n            setTimeout(type, speed);\n        }\n    }\n    \n    type();\n}\n\n// Initialize typing animation and logo when page loads\ndocument.addEventListener('DOMContentLoaded', () => {\n    const heroTitle = document.querySelector('.hero-title');\n    if (heroTitle) {\n        const originalText = heroTitle.textContent;\n        // Uncomment the line below to enable typing animation\n        // typeWriter(heroTitle, originalText, 100);\n    }\n    \n    // Initialize navigation logo based on current section\n    let currentSection = '';\n    if (window.location.hash) {\n        currentSection = window.location.hash.substring(1);\n    } else {\n        // Check which section is currently visible\n        const sections = document.querySelectorAll('section');\n        sections.forEach(section => {\n            const sectionTop = section.offsetTop;\n            if (window.scrollY >= (sectionTop - 200)) {\n                currentSection = section.getAttribute('id');\n            }\n        });\n    }\n    updateNavLogo(currentSection);\n});\n\n// Parallax effect for hero section (subtle)\nwindow.addEventListener('scroll', () => {\n    const scrolled = window.pageYOffset;\n    const hero = document.querySelector('.hero');\n    if (hero) {\n        hero.style.transform = `translateY(${scrolled * 0.2}px)`;\n    }\n});\n\n// Cache control for better performance in Replit environment\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        // Service worker registration can be added here for PWA features\n    });\n}\n\n// Performance optimization: Lazy loading for project images\nconst lazyImages = document.querySelectorAll('img[data-src]');\nconst imageObserver = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            const img = entry.target;\n            img.src = img.dataset.src;\n            img.classList.remove('lazy');\n            imageObserver.unobserve(img);\n        }\n    });\n});\n\nlazyImages.forEach(img => imageObserver.observe(img));","size_bytes":10669}},"version":1}